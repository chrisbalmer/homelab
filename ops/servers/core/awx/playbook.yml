- name: Install AWX Server
  hosts: awx
  gather_facts: yes
  become: yes
  pre_tasks:
    - name: Combine composes
      set_fact:
        composes: "{{ composes|default({}) | combine(hostvars[inventory_hostname]['compose_' + item]|default({})) }}"
      loop: "{{ group_names }}"
  roles:
    - ../../../../roles/firewall
    - ../../../../roles/yum-repos
    - chrisbalmer.nfs
    - ../../../../roles/docker
    - chrisbalmer.docker-compose
    - ../../../../../ansible-role-awx/
  tasks:
    - name: Setup Tower CLI
      template:
        src: tower_cli.cfg.j2
        dest: ~/.tower_cli.cfg
    - name: Create tower organization
      awx.awx.tower_organization:
        name: "{{ awx_organization }}"
        state: present
    - name: Add 1Password Credential Type
      awx.awx.tower_credential_type:
        name: 1Password Login
        kind: net
        inputs:
          fields:
            - id: op_email
              type: string
              label: 1Password Email
            - id: op_domain
              type: string
              label: 1Password Domain (i.e. my for non-business)
            - id: op_key
              type: string
              label: 1Password Key
              secret: true
            - id: op_password
              type: string
              label: 1Password Password
              secret: true
          required:
            - op_email
            - op_domain
            - op_key
            - op_password
        injectors:
          extra_vars:
            op_domain: "{{ '{{' }} op_domain {{ '}}' }}"
            op_email: "{{ '{{' }} op_email {{ '}}' }}"
            op_key: "{{ '{{' }} op_key {{ '}}' }}"
            op_password: "{{ '{{' }} op_password {{ '}}' }}"
    - name: Add 1Password Credential
      awx.awx.tower_credential:
        credential_type: 1Password Login
        name: 1Password
        inputs:
          op_email: "{{ lookup('onepassword', '1Password - Automation', field='username', vault='homelab') }}"
          op_domain: "my"
          op_key: "{{ lookup('onepassword', '1Password Account - automation', field='secret key', vault='homelab') }}"
          op_password: "{{ lookup('onepassword', '1Password - Automation', field='password', vault='homelab') }}"
        organization: "{{ awx_organization }}"
    - name: Setup Local Inventory
      awx.awx.tower_inventory:
        name: "Local Inventory"
        description: "AWX Container"
        organization: "{{ awx_organization }}"
        state: present
        variables:
          ansible_connection: local
          op_version: 1.8.0
    - name: Add AWX Container
      awx.awx.tower_host:
        name: localhost
        description: "AWX Container"
        inventory: "Local Inventory"
        state: present
    - name: Add projects
      awx.awx.tower_project:
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        organization: "{{ awx_organization }}"
        scm_type: git
        scm_branch: "{{ item.branch }}"
        scm_update_on_launch: False
        scm_url: "{{ item.git }}"
#        scm_update_cache_timeout: 60
      loop: "{{ awx_projects }}"
      loop_control:
        label: "{{ item.name }}"
    - name: Create 1Password Template
      awx.awx.tower_job_template:
        name: "1Password on AWX"
        job_type: "run"
        organization: "{{ awx_organization }}"
        inventory: "Local Inventory"
        project: "1Password AWX Setup"
        playbook: "setup.yml"
        state: "present"
    - name: Schedule 1Password on AWX Template
      awx.awx.tower_schedule:
        name: "Keep 1Password on AWX Container"
        state: present
        unified_job_template: "1Password on AWX"
        rrule: "DTSTART:20191219T130551Z RRULE:FREQ=MINUTELY;INTERVAL=30"

    # Help from:
    # - https://github.com/ansible/awx/issues/1040
    # - https://django-auth-ldap.readthedocs.io/en/stable/example.html
    # - https://www.markiiisys.com/blog/ansible-tower-integration-with-active-directory/
    # Get LDAP setting names: `tower-cli setting list | grep LDAP`
    - name: Configure LDAP
      awx.awx.tower_settings:
        settings:
          AUTH_LDAP_SERVER_URI: "{{ awx_ldap_uri }}"
          AUTH_LDAP_BIND_DN: "{{ awx_ldap_bind_dn }}"
          AUTH_LDAP_BIND_PASSWORD: "{{ awx_ldap_bind_password }}"
          AUTH_LDAP_REQUIRE_GROUP: "{{ awx_ldap_require_group }}"
          AUTH_LDAP_GROUP_TYPE: "{{ awx_ldap_group_type }}"
          AUTH_LDAP_GROUP_SEARCH: "{{ awx_ldap_group_search }}"
          AUTH_LDAP_USER_SEARCH: "{{ awx_ldap_user_search }}"
          AUTH_LDAP_USER_ATTR_MAP: "{{ awx_ldap_attribute_map }}"
          AUTH_LDAP_USER_FLAGS_BY_GROUP: "{{ awx_ldap_user_flags_by_group }}"
          AUTH_LDAP_ORGANIZATION_MAP: "{{ awx_ldap_org_map }}"

# TODO: Move org mappings to its own task and move org mappings under an org
# list with the name moved to a value in the dictionary of the org list
# awx_orgs:
#   - name: Balmer Family Farm
#     map:
#       admins: ...
#       more keys: more values
# Then change the org creation to a loop using the item.name
# and move the LDAP org map to its own task and possibly preconfigure
# a variable using set_fact to populate the LDAP mapping