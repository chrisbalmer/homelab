- name: Install Repo Servers
  hosts: all
  gather_facts: yes
  become: yes
  vars:
    repository_root: /var/repositories
    repository_directories:
      - centos
      - epel
    repositories:
      - name: ansible_base
        description: CentOS-7 - Base
        protocol: https
        url: "mirror.liquidtelecom.com/centos/7/os/x86_64/"
        directory: centos/7/base/x86_64
      - name: ansible_updates
        description: CentOS-7 - Updates
        protocol: https
        url: "mirror.liquidtelecom.com/centos/7/updates/x86_64/"
        directory: centos/7/updates/x86_64
      - name: ansible_extras
        description: CentOS-7 - Extras
        protocol: https
        url: "mirror.liquidtelecom.com/centos/7/extras/x86_64/"
        directory: centos/7/extras/x86_64
      - name: ansible_centosplus
        description: CentOS-7 - Plus
        protocol: https
        url: "mirror.liquidtelecom.com/centos/7/centosplus/x86_64/"
        directory: centos/7/centosplus/x86_64
      - name: ansible_epel
        description: Extra Packages for Enterprise Linux 7 - x86_64
        protocol: http
        url: "mirrors.liquidweb.com/fedora-epel/7/x86_64/"
        directory: epel/7/x86_64
    keys:
      - url: "mirror.liquidtelecom.com/centos/RPM-GPG-KEY-CentOS-7"
        directory: centos
      - url: "mirrors.liquidweb.com/fedora-epel/RPM-GPG-KEY-EPEL-7"
        directory: epel
  tasks:
    # Setup local repos so we can download files
    - name: Find default repo configs
      find:
        paths: 
          - /etc/yum.repos.d/
        patterns:
          - "CentOS-*"
          - "epel*"
      register: files_to_delete

    - name: Remove default repo configs
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ files_to_delete.files }}"

    - name: "CentOS: core"
      yum_repository:
        name: "{{ item.name }}"
        baseurl: "{{ item.protocol }}://{{ item.url }}"
        description: "{{ item.description }}"
        enabled: yes
        ip_resolve: IPv4
      with_items: "{{ repositories }}"

    # Setup web hosting
    - name: Install nginx to host repo
      package:
        name: nginx
        state: latest

    # Setup directory for files
    - name: Repo directories
      file:
        path: "{{ repository_root }}/{{ item.directory }}"
        state: directory
        recurse: yes
        owner: nginx
        group: nginx
      with_items: "{{ repositories }}"

    - name: Link repository directory to nginx root
      file:
        path: "/usr/share/nginx/html/{{ item }}"
        src: "{{ repository_root }}/{{ item }}"
        state: link
      with_items: "{{ repository_directories }}"

    # Setup downloads
    - name: Sync script
      template:
        src: templates/sync.sh.j2
        dest: "{{ repository_root }}/sync.sh"
        owner: nginx
        group: nginx
        mode: 0500

    - name: Cronjob to run sync
      cron:
        name: "sync repos"
        minute: "00"
        hour: "01"
        job: "{{ repository_root }}/sync.sh > /tmp/sync.log"
        user: nginx

    - name: Open firewall port for http
      ansible.posix.firewalld:
        service: http
        permanent: true
        state: enabled
